{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template EasyVPN_Client: Sample template showing how to create an instance with a single network interface and a static IP addresses in an existing VPC and setup the OpenVPN server environment. It assumes you have already created a VPC. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "EasyClient EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "c4.large", "c5.large" ]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "VpcId" : {
      "Type" : "AWS::EC2::VPC::Id",
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be the VPC Id of an existing Virtual Private Cloud."
    },
    "VpcCIDR" : {
      "Description" : "VPC CIDR",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
	},
    "SubnetId" : {
      "Type" : "AWS::EC2::Subnet::Id",
      "Description" : "SubnetId of an existing public subnet in your Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be an existing public subnet in the selected Virtual Private Cloud."
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "VPNServerIP" : {
      "Description" : "The IP address of remote VPN Server EIP",
      "Type": "String",
      "MinLength": "7",
      "MaxLength": "15",
      "Default": "0.0.0.0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "Must be a valid IP address"
    },
    "PSK" : {
      "Description" : "VPN PSK",
      "Type": "String",
      "MinLength": "0",
      "MaxLength": "512",
      "Default": "",
      "ConstraintDescription": "512 byte from VPN Server Cloudformation output"
    }  
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"   : { "Arch" : "HVM64"  },
      "c4.large"   : { "Arch" : "HVM64"  },
      "c5.large"   : { "Arch" : "HVM64"  }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "HVM64" : "NOT-SUPPORTED" },
      "us-west-2"      : { "HVM64" : "NOT-SUPPORTED" },
      "us-west-1"      : { "HVM64" : "NOT-SUPPORTED" },
      "eu-west-1"      : { "HVM64" : "NOT-SUPPORTED" },
      "ap-southeast-1" : { "HVM64" : "NOT-SUPPORTED" },
      "ap-northeast-1" : { "HVM64" : "ami-28ddc154" },
      "ap-southeast-2" : { "HVM64" : "NOT-SUPPORTED" },
      "sa-east-1"      : { "HVM64" : "NOT-SUPPORTED" },
      "cn-north-1"     : { "HVM64" : "ami-d8578bb5" },
      "cn-northwest-1" : { "HVM64" : "ami-02f5e160" },
      "eu-central-1"   : { "HVM64" : "NOT-SUPPORTED" }
    }
  },

  "Resources" : {
    "VPNClientEIP" :  {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "EIPAssoc1" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "NetworkInterfaceId" : { "Ref" : "Eth0" },
        "AllocationId" : { "Fn::GetAtt" : ["VPNClientEIP", "AllocationId"] }
      }
    },

    "SSHSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Enable SSH access via port 22 and VPN Client UDP 81",
        "SecurityGroupIngress" : [ 
			{"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
			{"IpProtocol" : "udp", "FromPort" : "81", "ToPort" : "89", "CidrIp" : "0.0.0.0/0"},
			{"IpProtocol" : "tcp", "FromPort" : "1200", "ToPort" : "1300", "CidrIp" : "0.0.0.0/0"},
			{"IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : "0.0.0.0/0"},
			{"IpProtocol" : "-1", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Ref" : "VpcCIDR"}}
		]
      }
    },

    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName"  : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [ { 
          "NetworkInterfaceId" : {"Ref" : "Eth0" },
          "DeviceIndex" : "0"
        }],
		"SourceDestCheck": "false",
        "Tags"     : [ {"Key" : "Name", "Value" : "EasyVPNClient" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                       "#!/bin/bash -xe\n",
                       "yum install -y wget\n",
                       "wget https://s3.cn-north-1.amazonaws.com.cn/leopublic/templates/EasyVPN/EasyVPN_Client_Setup.sh\n",
					   "/bin/bash ./EasyVPN_Client_Setup.sh ",
					   { "Ref" : "VPNServerIP" },
                       " ",
					   { "Ref" : "VpcCIDR" },
                       " ",
					   { "Ref" : "PSK" },
					   "\n"
        ]]}}
      }
    },

    "Eth0" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description"        : "eth0",
        "GroupSet"           : [ { "Ref" : "SSHSecurityGroup" } ],
        "SourceDestCheck"    : "true",
        "SubnetId"           : { "Ref" : "SubnetId" },
        "Tags"               : [ {"Key" : "Name", "Value" : "Interface 0"}, {"Key" : "Interface", "Value" : "eth0"} ]
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Value" : { "Ref" : "EC2Instance" },
      "Description" : "Instance Id of newly created instance"
    },
    "VPNClientEIP" : {
      "Value" : {"Ref" : "VPNClientEIP" },
      "Description" : "VPN Client EIP"
    }
  }
}
